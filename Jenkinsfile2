pipeline {
    agent any
    
    environment {
		ETE_SERVER='127.0.0.1'
    }
    
    stages {
    	stage ('Check program type') {

    	when {
                expression { params.IS_DOMAIN == true }
            }
            steps {
            	echo "Build domain."
            }
        }
    	
        stage('Build domains') {
       		environment {
                ETE_SERVER='127.0.0.1'
            }
            when {
                expression { params.IS_DOMAIN == true }
            }
            steps {
            	bat "IF EXIST svn\\ETESystem rmdir /s /q svn\\ETESystem"
            	bat "mkdir svn\\ETESystem"
            	
            	echo "Checking out source code from SVN..."
            	bat "svn checkout http://10.175.230.180:8080/svn/ETESystem/branches/${params.ETE_BRANCH}/domains/${params.ETE_DOMAIN_NAME} svn/ETESystem/branches/${params.ETE_BRANCH}/domains/${params.ETE_DOMAIN_NAME}"
                
                input "Continue ?"
                
                dir ("svn/ETESystem/branches/${params.ETE_BRANCH}/apps/${params.ETE_DOMAIN_NAME}") {
                	bat "svn status"
                	bat "mvn --version"
				}
            }
        }      
        
        stage('Build applcations') {
       		environment {
                ETE_SERVER='127.0.0.1'
            }
            when {
                expression { params.IS_DOMAIN == false }
            }
            steps {
            	echo "Checking out source code from SVN..."
            	bat "IF EXIST svn\\ETESystem rmdir /s /q svn\\ETESystem"
            	bat "mkdir svn\\ETESystem"
            	
            	echo "Checking out source code from SVN..."
            	bat "svn checkout http://10.175.230.180:8080/svn/ETESystem/branches/${params.ETE_BRANCH}/apps/${params.ETE_APP_NAME} svn/ETESystem/branches/${params.ETE_BRANCH}/apps/${params.ETE_APP_NAME}"
                
                dir ("svn/ETESystem/branches/${params.ETE_BRANCH}/apps/${params.ETE_APP_NAME}") {
                    bat "svn status"
                	bat "mvn --version"
                	
                	input "Continue ?"
                	
                	bat '''
					    
					    IF EXIST "pom.xml" (
						    mvn clean package
						) ELSE (
						    echo "pom.xml not found."
						)
					'''

				}
				

            }
        } 
        
        stage('Test') {
            steps {
                bat 'mvn --version'
            }
        }
        
        stage('Human check') {
            steps {
                input "Can deployment step continue ?"
            }
        }
        
        stage('Deploy') {
            steps {
                retry(3) {
                    bat 'python --version'
                }

                timeout(time: 3, unit: 'MINUTES') {
                    bat 'python --version'
                }
            }
        }

        
    }
    post {
        always {
            echo 'This will always run'
        }
        success {
            echo 'This will run only if successful'
        }
        failure {
            echo 'This will run only if failed'
        }
        unstable {
            echo 'This will run only if the run was marked as unstable'
        }
        changed {
            echo 'This will run only if the state of the Pipeline has changed'
            echo 'For example, if the Pipeline was previously failing but is now successful'
        }
    }
    
}