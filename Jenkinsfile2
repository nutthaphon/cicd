pipeline {
    agent any
    
    environment {
		ETE_SERVER='127.0.0.1'
		SIT_APPS_HOME1 = 'env\\SIT\\ETE\\App\\mule-esb-3.7.3-SIT\\apps'
		SIT_APPS_HOME2 = 'env\\SIT\\ETE\\App\\mule-esb-3.7.3-SIT-ATM\\apps'
		VIT_APPS_HOME1 = 'env\\VIT\\ETE\\App\\mule-esb-3.7.3-VIT\\apps'
    }
    
    stages {
    	stage ('Check program type') {

    	when {
                expression { params.IS_DOMAIN == true }
            }
            steps {
            	echo "Build domain."
            	withEnv(['MY_HOME=C:\\']) {
				    bat '''
				    	cd $MY_HOME
				    	cd
				    '''
				}
            }
        }
    	
        stage('Build domains') {
       		environment {
                ETE_SERVER='127.0.0.1'
            }
            when {
                expression { params.IS_DOMAIN == true }
            }
            steps {
            	bat "IF EXIST svn\\ETESystem rmdir /s /q svn\\ETESystem"
            	bat "mkdir svn\\ETESystem"
            	
            	echo "Checking out source code from SVN..."
            	bat "svn checkout http://10.175.230.180:8080/svn/ETESystem/branches/${params.ETE_BRANCH}/domains/${params.ETE_DOMAIN_NAME} svn/ETESystem/branches/${params.ETE_BRANCH}/domains/${params.ETE_DOMAIN_NAME}"
                
                input "Continue ?"
                
                dir ("svn/ETESystem/branches/${params.ETE_BRANCH}/apps/${params.ETE_DOMAIN_NAME}") {
                	bat "svn status"
                	bat "mvn --version"
				}
            }
        }      
        
        stage('Build applications') {
       		environment {
                ETE_SERVER='127.0.0.1'
            }
            when {
                expression { params.IS_DOMAIN == false }
            }
            steps {
            
            	 script {
                    if (params.ETE_BRANCH == 'SIT') {
                        echo 'I am in SIT'
                    } else {
                        echo 'I am in elsewhere'
                    }

                    def browsers = ['chrome', 'firefox']
                    for (int i = 0; i < browsers.size(); ++i) {
                        echo "Testing the ${browsers[i]} browser"
                    }
                }
                
            	echo "Checking out source code from SVN..."
            	bat "IF EXIST svn\\ETESystem rmdir /s /q svn\\ETESystem"
            	bat "mkdir svn\\ETESystem"
            	
            	echo "Checking out source code from SVN..."
            	bat "svn checkout http://10.175.230.180:8080/svn/ETESystem/branches/${params.ETE_BRANCH}/apps/${params.ETE_APP_NAME} svn/ETESystem/branches/${params.ETE_BRANCH}/apps/${params.ETE_APP_NAME}"
                
                dir ("svn/ETESystem/branches/${params.ETE_BRANCH}/apps/${params.ETE_APP_NAME}") {
                    bat "svn status"
                	bat "mvn --version"
                	
                	bat '''
					    IF EXIST "pom.xml" (
						    mvn clean package
						    
						) ELSE (
						    echo "pom.xml not found."
						)
					
					'''
					
				}
				
				script {
                    if (params.ETE_APP_NAME =~ /^atm/) { 
                        echo 'I am ATM'
                        bat "if not exist $SIT_APPS_HOME2 mkdir $SIT_APPS_HOME2"
                        bat "copy /y svn\\ETESystem\\branches\\${params.ETE_BRANCH}\\apps\\${params.ETE_APP_NAME}\\target\\${params.ETE_APP_NAME}.zip ${SIT_APPS_HOME2}"
                    } else {
                        echo 'I am not ATM'
                        bat "if not exist $SIT_APPS_HOME1 mkdir $SIT_APPS_HOME1"
                        bat "copy /y svn\\ETESystem\\branches\\${params.ETE_BRANCH}\\apps\\${params.ETE_APP_NAME}\\target\\${params.ETE_APP_NAME}.zip ${SIT_APPS_HOME1}"
                    }


                    /* def browsers = ['chrome', 'firefox']
                    for (int i = 0; i < browsers.size(); ++i) {
                        echo "Testing the ${browsers[i]} browser"
                    } */
                }
				
            }
        } 
        
        stage('Test') {
            steps {
            	script {
	                if (params.ETE_BRANCH == 'SIT') {
	            		echo 'Testing in SIT'
			        } else {
			            echo 'Testing in another'
			        }
			    }
            }
        }
        
        stage('Human check') {
            steps {
                input "Can deployment step continue ?"
            }
        }
        
        stage('Deploy') {
            steps {
                retry(3) {
                    bat 'python --version'
                }

                timeout(time: 3, unit: 'MINUTES') {
                    bat 'python --version'
                }
            }
        }

        
    }
    post {
        always {
            echo 'This will always run'
        }
        success {
            echo 'This will run only if successful'
        }
        failure {
            echo 'This will run only if failed'
        }
        unstable {
            echo 'This will run only if the run was marked as unstable'
        }
        changed {
            echo 'This will run only if the state of the Pipeline has changed'
            echo 'For example, if the Pipeline was previously failing but is now successful'
        }
    }
    
}